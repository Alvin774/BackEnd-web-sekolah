<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Admin - Kelola Data Fasilitas</title>
  <!-- Bootstrap CSS -->
  <link
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css"
    rel="stylesheet"
    integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65"
    crossorigin="anonymous"
  />
  <!-- Bootstrap Icons -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css" />
  <!-- Google Fonts -->
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  <link
    href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap"
    rel="stylesheet"
  />
  <!-- Font Awesome -->
  <link
    href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css"
    rel="stylesheet"
  />
  <!-- Custom CSS (optional inline styling) -->
  <style>
    :root {
      --primary-green: #2ecc71;
      --dark-green: #27ae60;
      --bg-light: #f5f5f5;
      --text-dark: #2c3e50;
    }
    body {
      background-color: var(--bg-light);
      font-family: 'Poppins', sans-serif;
      color: var(--text-dark);
      padding: 20px;
    }
    .container {
      max-width: 900px;
      margin: 0 auto;
      background: #fff;
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    }
    h2 {
      text-align: center;
      margin-bottom: 30px;
      color: var(--dark-green);
    }
    .form-label {
      font-weight: 600;
    }
    .btn-success {
      background-color: var(--primary-green);
      border-color: var(--primary-green);
    }
    .btn-success:hover {
      background-color: var(--dark-green);
      border-color: var(--dark-green);
    }
    .btn-danger {
      background-color: #e74c3c;
      border-color: #e74c3c;
      color: #fff;
    }
    .btn-danger:hover {
      background-color: #c0392b;
      border-color: #c0392b;
    }
    /* Styling untuk grid kartu fasilitas */
    .fasilitas-card {
      margin-bottom: 20px;
    }
    .fasilitas-card img {
      width: 100%;
      height: 200px;
      object-fit: cover;
      border-radius: 5px;
    }
  </style>
</head>
<body>
  <!-- Header Navigasi Sederhana -->
  <nav class="navbar navbar-expand-lg bg-dark mb-4">
    <div class="container">
      <a class="navbar-brand text-white" href="#">Admin Data Fasilitas</a>
    </div>
  </nav>

  <div class="container">
    <h2>Kelola Data Fasilitas</h2>

    <!-- Form Tambah Fasilitas -->
    <form id="fasilitasForm" enctype="multipart/form-data" class="mb-4">
      <!-- Input tersembunyi untuk ID (untuk mode edit, jika diperlukan) -->
      <input type="hidden" id="fasilitasId" name="fasilitasId">
      <div class="mb-3">
        <label for="fasilitasName" class="form-label">Nama Fasilitas</label>
        <input type="text" class="form-control" id="fasilitasName" name="name" placeholder="Contoh: Ruang Kelas" required>
      </div>
      <div class="mb-3">
        <label for="fasilitasImage" class="form-label">Upload Gambar</label>
        <input type="file" class="form-control" id="fasilitasImage" name="image" required>
      </div>
      <div class="d-flex">
        <button type="submit" class="btn btn-success me-2" id="submitFasilitasBtn">Simpan Fasilitas</button>
        <button type="button" class="btn btn-secondary" id="resetFasilitasBtn">Reset Form</button>
      </div>
    </form>

    <!-- Preview Section (Opsional) -->
    <div class="mb-4">
      <h4 class="mb-3">Preview Fasilitas</h4>
      <div class="card mb-3">
        <img src="img/default-fasilitas.jpg" alt="Preview Gambar" id="previewFasilitasImage" class="card-img-top">
        <div class="card-body text-center">
          <h5 id="previewFasilitasName">Nama Fasilitas</h5>
        </div>
      </div>
    </div>

    <!-- Daftar Fasilitas -->
    <h4 class="mb-3">Daftar Fasilitas</h4>
    <div class="row" id="fasilitasContainer">
      <!-- Kartu fasilitas akan dimuat secara dinamis di sini -->
    </div>
  </div>

  <!-- JavaScript -->
  <script>
    // Fungsi untuk mengupdate preview secara real time
    function updateFasilitasPreview() {
      const name = document.getElementById('fasilitasName').value;
      document.getElementById('previewFasilitasName').innerText = name || 'Nama Fasilitas';
    }

    // Event listener untuk update preview nama fasilitas
    document.getElementById('fasilitasName').addEventListener('input', updateFasilitasPreview);

    // Update preview gambar ketika file diupload
    document.getElementById('fasilitasImage').addEventListener('change', function() {
      const file = this.files[0];
      if (file) {
        const reader = new FileReader();
        reader.onload = function(e) {
          document.getElementById('previewFasilitasImage').src = e.target.result;
        };
        reader.readAsDataURL(file);
      } else {
        document.getElementById('previewFasilitasImage').src = 'img/default-fasilitas.jpg';
      }
    });

    // Reset form dan preview
    document.getElementById('resetFasilitasBtn').addEventListener('click', function() {
      document.getElementById('fasilitasForm').reset();
      updateFasilitasPreview();
      document.getElementById('previewFasilitasImage').src = 'img/default-fasilitas.jpg';
    });

    // Fungsi untuk load data fasilitas dari API dan tampilkan di grid
    async function loadFasilitas() {
      try {
        const response = await fetch('/api/fasilitas');
        if (!response.ok) throw new Error('Gagal mengambil data fasilitas');
        const fasilitasList = await response.json();
        const container = document.getElementById('fasilitasContainer');
        container.innerHTML = ""; // Kosongkan container

        if (fasilitasList.length === 0) {
          container.innerHTML = '<p class="text-center">Tidak ada data fasilitas.</p>';
          return;
        }

        fasilitasList.forEach(fasilitas => {
          const colDiv = document.createElement('div');
          colDiv.className = "col-12 col-sm-6 col-md-4 fasilitas-card";
          colDiv.innerHTML = `
            <div class="card">
              <img src="${fasilitas.imageUrl ? fasilitas.imageUrl : 'img/default-fasilitas.jpg'}" class="card-img-top" alt="${fasilitas.name}">
              <div class="card-body text-center">
                <h5 class="card-text fw-bold">${fasilitas.name}</h5>
                <button class="btn btn-danger btn-sm mt-2" onclick="deleteFasilitas(${fasilitas.id})">
                  Hapus
                </button>
              </div>
            </div>
          `;
          container.appendChild(colDiv);
        });
      } catch (error) {
        console.error("Error loading fasilitas:", error);
        alert("Terjadi kesalahan saat memuat data fasilitas.");
      }
    }

    // Fungsi untuk submit form (Tambah atau Update Fasilitas)
    document.getElementById('fasilitasForm').addEventListener('submit', async function(e) {
      e.preventDefault();
      const formData = new FormData(this);
      try {
        let response;
        const fasilitasId = document.getElementById('fasilitasId').value;
        if (fasilitasId) {
          // Update data (PUT)
          response = await fetch(`/api/fasilitas/${fasilitasId}`, {
            method: 'PUT',
            body: formData
          });
        } else {
          // Tambah data baru (POST)
          response = await fetch('/api/fasilitas', {
            method: 'POST',
            body: formData
          });
        }
        const result = await response.json();
        if (response.ok) {
          alert(result.message);
          document.getElementById('fasilitasForm').reset();
          updateFasilitasPreview();
          document.getElementById('previewFasilitasImage').src = 'img/default-fasilitas.jpg';
          loadFasilitas();
        } else {
          alert(result.message || "Gagal menyimpan data fasilitas.");
        }
      } catch (error) {
        console.error("Error submitting fasilitas form:", error);
        alert("Terjadi kesalahan saat mengirim data.");
      }
    });

    // Fungsi untuk menghapus data fasilitas
    async function deleteFasilitas(id) {
      if (!confirm("Apakah Anda yakin ingin menghapus data fasilitas ini?")) return;
      try {
        const response = await fetch(`/api/fasilitas/${id}`, {
          method: 'DELETE'
        });
        const result = await response.json();
        if (response.ok) {
          alert(result.message);
          loadFasilitas();
        } else {
          alert(result.message || "Gagal menghapus data fasilitas.");
        }
      } catch (error) {
        console.error("Error deleting fasilitas:", error);
        alert("Terjadi kesalahan saat menghapus data fasilitas.");
      }
    }

    // Panggil loadFasilitas saat DOM selesai dimuat
    document.addEventListener("DOMContentLoaded", loadFasilitas);
  </script>

  <!-- Bootstrap JS Bundle -->
  <script
    src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
    crossorigin="anonymous"
  ></script>
</body>
</html>

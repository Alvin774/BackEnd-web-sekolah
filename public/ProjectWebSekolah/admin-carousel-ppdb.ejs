<%- include('partials/header-admin') %>
  <style>
    :root {
      --primary-green: #2ecc71;
      --dark-green: #27ae60;
      --bg-light: #f5f5f5;
      --text-dark: #2c3e50;
    }
    body {
      background-color: var(--bg-light);
      font-family: 'Poppins', sans-serif;
      color: var(--text-dark);
      padding: 20px;
    }
    .container {
      max-width: 900px;
      margin: 0 auto;
      background: #fff;
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }
    h2 {
      text-align: center;
      margin-bottom: 30px;
      color: var(--dark-green);
    }
    .form-label {
      font-weight: 600;
    }
    .btn-success {
      background-color: var(--primary-green);
      border-color: var(--primary-green);
    }
    .btn-success:hover {
      background-color: var(--dark-green);
      border-color: var(--dark-green);
    }
    .btn-danger {
      background-color: #e74c3c;
      border-color: #e74c3c;
      color: #fff;
    }
    .btn-danger:hover {
      background-color: #c0392b;
      border-color: #c0392b;
    }
    /* Styling untuk grid kartu carousel */
    .carousel-card {
      margin-bottom: 20px;
    }
    .carousel-card img {
      width: 100%;
      height: 200px;
      object-fit: cover;
      border-radius: 5px;
    }
  </style>
    <style>
      :root {
        --primary-green: #2ecc71;
        --dark-green: #27ae60;
        --bg-light: #f5f5f5;
        --text-dark: #2c3e50;
      }
      body {
        background-color: var(--bg-light);
        font-family: 'Poppins', sans-serif;
        color: var(--text-dark);
        padding: 20px;
      }
      .container {
        max-width: 900px;
        margin: 0 auto;
        background: #fff;
        padding: 20px 30px;
        border-radius: 10px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        margin-bottom: 40px;
      }
      h2, h3 {
        text-align: center;
        margin-bottom: 20px;
        color: var(--dark-green);
      }
      .section-title {
        border-bottom: 2px solid var(--primary-green);
        padding-bottom: 5px;
        margin-bottom: 20px;
      }
      .form-label {
        font-weight: 600;
      }
      .btn-success {
        background-color: var(--primary-green);
        border-color: var(--primary-green);
      }
      .btn-success:hover {
        background-color: var(--dark-green);
        border-color: var(--dark-green);
      }
      .btn-danger {
        background-color: #e74c3c;
        border-color: #e74c3c;
        color: #fff;
      }
      .btn-danger:hover {
        background-color: #c0392b;
        border-color: #c0392b;
      }
      /* Preview styling untuk PPDB Info & Brosur */
      .preview-card {
        border: 1px solid var(--primary-green);
        border-radius: 5px;
        padding: 15px;
        background: #f9f9f9;
        text-align: center;
        margin-bottom: 20px;
      }
      .preview-card img {
        width: 100%;
        max-height: 200px;
        object-fit: cover;
        border-radius: 5px;
        margin-bottom: 10px;
      }
      /* Styling untuk grid alur pendaftaran */
      .alur-card img {
        width: 100%;
        height: 150px;
        object-fit: cover;
        border-radius: 50%;
      }
      .alur-card {
        margin-bottom: 20px;
      }
    </style>
  <div class="container">
    <h2>Kelola PPDB Carousel</h2>
    <!-- Form Input untuk Tambah Slide -->
    <form id="carouselForm" enctype="multipart/form-data" class="mb-4">
      <!-- Input tersembunyi untuk ID (jika dalam mode edit; untuk saat ini kita fokus pada tambah dan hapus) -->
      <input type="hidden" id="carouselId" name="carouselId">
      <div class="mb-3">
        <label for="captionTitle" class="form-label">Judul Caption</label>
        <input type="text" class="form-control" id="captionTitle" name="captionTitle" placeholder="Masukkan judul slide" required>
      </div>
      <div class="mb-3">
        <label for="captionDescription" class="form-label">Deskripsi Caption</label>
        <textarea class="form-control" id="captionDescription" name="captionDescription" rows="3" placeholder="Masukkan deskripsi slide" required></textarea>
      </div>
      <div class="mb-3">
        <label for="linkUrl" class="form-label">Link URL (Opsional)</label>
        <input type="url" class="form-control" id="linkUrl" name="linkUrl" placeholder="Contoh: https://contoh.com">
      </div>
      <div class="mb-3">
        <label for="order" class="form-label">Urutan (Opsional)</label>
        <input type="number" class="form-control" id="order" name="order" placeholder="Masukkan nomor urut slide">
      </div>
      <div class="mb-3">
        <label for="carouselImage" class="form-label">Upload Gambar</label>
        <input type="file" class="form-control" id="carouselImage" name="image" required>
      </div>
      <div class="d-flex">
        <button type="submit" class="btn btn-success me-2" id="submitCarouselBtn">Simpan Slide</button>
        <button type="button" class="btn btn-secondary" id="resetCarouselBtn">Reset Form</button>
      </div>
    </form>

    <!-- Preview Section (Opsional) -->
    <div class="mb-4">
      <h4 class="mb-3">Preview Slide</h4>
      <div class="card mb-3">
        <img src="img/default-ppdb.jpg" alt="Preview Gambar" id="previewCarouselImage" class="card-img-top">
        <div class="card-body text-center">
          <h5 id="previewCaptionTitle">Judul Slide</h5>
          <p id="previewCaptionDescription">Deskripsi slide akan tampil di sini.</p>
        </div>
      </div>
    </div>

    <!-- Daftar Slide Carousel -->
    <h4 class="mb-3">Daftar Slide Carousel</h4>
    <div class="row" id="carouselList">
      <!-- Kartu slide akan dimuat secara dinamis di sini -->
    </div>
  </div>

  <!-- JavaScript -->
  <script>
    // Update preview secara real time untuk text input
    function updateCarouselPreview() {
      const captionTitle = document.getElementById('captionTitle').value;
      const captionDescription = document.getElementById('captionDescription').value;
      document.getElementById('previewCaptionTitle').innerText = captionTitle || 'Judul Slide';
      document.getElementById('previewCaptionDescription').innerText = captionDescription || 'Deskripsi slide akan tampil di sini.';
    }
    document.getElementById('captionTitle').addEventListener('input', updateCarouselPreview);
    document.getElementById('captionDescription').addEventListener('input', updateCarouselPreview);

    // Update preview gambar saat file diupload
    document.getElementById('carouselImage').addEventListener('change', function() {
      const file = this.files[0];
      if (file) {
        const reader = new FileReader();
        reader.onload = function(e) {
          document.getElementById('previewCarouselImage').src = e.target.result;
        };
        reader.readAsDataURL(file);
      } else {
        document.getElementById('previewCarouselImage').src = 'img/default-ppdb.jpg';
      }
    });

    // Reset form dan preview
    document.getElementById('resetCarouselBtn').addEventListener('click', function() {
      document.getElementById('carouselForm').reset();
      updateCarouselPreview();
      document.getElementById('previewCarouselImage').src = 'img/default-ppdb.jpg';
    });

    // Form submission untuk tambah slide
    document.getElementById('carouselForm').addEventListener('submit', async function(e) {
      e.preventDefault();
      const formData = new FormData(this);
      try {
        // Karena untuk halaman admin, kita fokus pada penambahan (tambah) slide.
        const response = await fetch('/api/ppdbcarousel', {
          method: 'POST',
          body: formData
        });
        const result = await response.json();
        if (response.ok) {
          alert(result.message);
          document.getElementById('carouselForm').reset();
          updateCarouselPreview();
          document.getElementById('previewCarouselImage').src = 'img/default-ppdb.jpg';
          loadCarousel();
        } else {
          alert(result.message || "Gagal menyimpan slide.");
        }
      } catch (error) {
        console.error("Error submitting carousel form:", error);
        alert("Terjadi kesalahan saat mengirim data.");
      }
    });

    // Fungsi untuk memuat daftar slide dari API
    async function loadCarousel() {
      try {
        const response = await fetch('/api/ppdbcarousel');
        if (!response.ok) {
          throw new Error('Gagal mengambil data PPDB Carousel');
        }
        const slides = await response.json();
        const container = document.getElementById('carouselList');
        container.innerHTML = ""; // Kosongkan kontainer

        if (slides.length === 0) {
          container.innerHTML = '<p class="text-center">Tidak ada data slide.</p>';
          return;
        }

        // Urutkan berdasarkan field order jika tersedia
        slides.sort((a, b) => a.order - b.order);

        slides.forEach((slide, index) => {
          const colDiv = document.createElement('div');
          colDiv.className = "col-12 col-sm-6 col-md-4 carousel-card";
          colDiv.innerHTML = `
            <div class="card">
              <img src="${slide.imageUrl}" class="card-img-top" alt="${slide.captionTitle}">
              <div class="card-body text-center">
                <h5 class="card-text fw-bold">${slide.captionTitle}</h5>
                <p class="card-text">${slide.captionDescription}</p>
                <button class="btn btn-danger btn-sm" onclick="deleteSlide(${slide.id})">Hapus</button>
              </div>
            </div>
          `;
          container.appendChild(colDiv);
        });
      } catch (error) {
        console.error("Error loading carousel:", error);
        alert("Terjadi kesalahan saat memuat data PPDB Carousel.");
      }
    }

    // Fungsi untuk menghapus slide berdasarkan ID
    async function deleteSlide(id) {
      if (!confirm("Apakah Anda yakin ingin menghapus slide ini?")) return;
      try {
        const response = await fetch(`/api/ppdbcarousel/${id}`, {
          method: 'DELETE'
        });
        const result = await response.json();
        if (response.ok) {
          alert(result.message);
          loadCarousel();
        } else {
          alert(result.message || "Gagal menghapus slide.");
        }
      } catch (error) {
        console.error("Error deleting slide:", error);
        alert("Terjadi kesalahan saat menghapus slide.");
      }
    }

    // Panggil loadCarousel saat halaman selesai dimuat
    document.addEventListener("DOMContentLoaded", loadCarousel);
</script>


  <script
    src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"
  ></script>
</body>
</html>

